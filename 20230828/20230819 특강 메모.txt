API: 프로그래밍하는데 도움을 주는 도구

매서드: 객체안의 함수


document: 문서 전체를 의미
querySelector 함수: 선택하는ㄴ 명령을 날린다는 뜻의 함수

innerHTML: 선택한 매서드의 속성을 =을 써서 바꾸는 것

함수: 뭔가 입력이 있으면 행동이 있는 것


function 첫번째공바꾸기(numStr){
   const ball1 = document.querySelector("#main_pack > div.sc_new.cs_lotto._lotto > div >
 div.content_area > div > div > div:nth-child(2) > div.win_number_box > div > div.winning_number > 
span:nth-child(1)")
    ball1.innerHTML = numStr
}
->1. function으로 함수 선언
2. 이름은  첫번째공바꾸기!
3. 들어가는 값의 이름은 numStr 으로 정함

이 함수를 실행하면
4. ball1 이라는 변수가 생성됨
5. ball1에는 쿼리쉘렉터코드가 할당되어있음
6. ball1.이 가리키는 HTML에 numStr값이 반영


addEventListener: 이벤트를 듣는 걸 추가한다




<예제>
//로또 공을 클릭하는 걸 인식해야함
//그리고 인식이 되면 만들어둔 함수에 값을 입력할 수도 있어야함
//값을 입력하면 화면의 공 숫자가 바뀜

function 클릭했을때() {
    console.log("클릭됨!")
}
ball1.addEventListener("click",클릭했을때): 아직실행된 것이 아니고 클릭을 했을 때 실행이 된다 이걸 콜백펑션
이라고 한다.


<예제>
ball1.addEventListener("click",클릭했을때)
function 클릭했을때(){
    const numStr = prompt("로또번호를 입력하세요")
    첫번째공바꾸기(numStr)
}
ball.addEventListener("click",클릭했을때)



<예제>
function 첫번째공바꾸기(numStr){
    const ball1 = document.querySelector("#main_pack > div.sc_new.cs_lotto._lotto > div > div.content_area > div > div > div:nth-child(2) > div.win_number_box > div > div.winning_number > span:nth-child(1)")
            ball1.innerHTML = numStr
        }

function 클릭했을때(){
    const numStr = prompt("로또버놓를 입력하세요")
    첫번째공바꾸기(numStr)
}

ball1.addEventListener("click",클릭했을때)



@
click은 문자열로 적어야한다("click")

값이 변하는 것으로 파라미터를 지정하는게 좋다
let str = '';
let 99 = 9

for(let i = 0; i<9; i++){
str=99r*i;
console.log()
}

console.log(str)




for문은  코드블럭({} 안의 값) 이 실행되기 전에 검사를 한다


map은 출력하면 새로운 배열을ㄹ 만들고 foreach는 배열로 안나온다
foreach는 단순하게 배열안에 있는 요소 하나하나에 대해 로직을 실행할 떄 사용
map은 요소 하나하나에 매칭해서 새로운 배열을 만들때 사용
결국 배열로 반환을 하냐 안하냐의 차이

 콜백함수; 실행을 다음 함수에게 떠넘기는 함수










